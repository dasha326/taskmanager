{"version":3,"file":"bundle.js","mappings":"mBAAA,MAAMA,EAAkBC,GACbA,EAAQ,GAAK,IAAIA,IAAUC,OAAOD,GAUhCE,EAAcC,GAIhB,GAHOJ,EAAeI,EAAKC,WAAa,OAC/BL,EAAeI,EAAKE,gBAK3BC,EACG,aADHA,EAEE,YAGFC,EAAS,CAACC,EAAWC,EAASC,KACvC,OAAQA,GACJ,KAAKJ,EACDE,EAAUG,QAAQF,GAClB,MACJ,KAAKH,EACDE,EAAUI,OAAOH,KC3Bd,MAAMI,EACjBC,cACI,gBAAkBD,EACd,MAAM,IAAIE,MAAM,uDAEpBC,KAAKC,SAAW,KAChBD,KAAKE,sBAAwBC,KAGjCC,cAEI,MADAC,QAAQC,IAAIN,KAAKE,YACX,IAAIH,MAAM,gCAAgCC,KAAKE,cAGzDK,aAKI,OAJKP,KAAKC,WACND,KAAKC,SDdY,CAACO,IAC1B,MAAMC,EAAaC,SAASC,cAAc,OAG1C,OAFAF,EAAWG,UAAYJ,EAEhBC,EAAWI,YCUMF,CAAcX,KAAKI,gBAGhCJ,KAAKC,SAGhBa,gBACId,KAAKC,SAAW,MCjBT,MAAMc,UAAclB,EAC/BO,cACI,MANA,oCCQO,MAAMY,UAAanB,EAC9BO,cACI,MAVA,sUCIO,MAAMa,UAAgBpB,EACjCO,cACI,MANA,8DCJD,MAAMc,EAAc,CACvB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAESC,EAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5CC,EAAS,CAAC,QAAS,SAAU,OAAQ,QAAS,QCwC5C,MAAMC,UAAaxB,EAC9BC,YAAYwB,GACRC,QACAvB,KAAKwB,MAAQF,EAEjBlB,cACI,MA1DmB,CAACkB,IACxB,MAAM,YAACG,EAAW,QAAEC,EAAO,MAAEC,EAAK,cAAEC,EAAa,UAAEC,EAAS,WAAEC,GAAcR,EAEtES,EAAYL,aAAmBM,MAAQN,EAAUM,KAAKC,MAEtDC,IAAkBR,EAClBvC,EAAO+C,EAAgB,GAAGR,EAAQS,aAAajB,EAAYQ,EAAQU,cAAgB,GACnFC,EAAOH,EAAgBhD,EAAWwC,GAAW,GAQnD,MAAO,8BAC2BC,KAPVW,OAAOC,OAAOX,GAAeY,MAAMC,KAASA,IAC9B,eAAiB,MACjCV,EAAY,iBAAmB,wSAClBF,EAAY,GAAK,6HAChBC,EAAa,GAAK,4ZAmBdL,yVAOStC,gEACAkD,0MAkBtCK,CAAmB1C,KAAKwB,QCmExB,MAAMmB,UAAiB9C,EAClCC,YAAYwB,GACRC,QACAvB,KAAKwB,MAAQF,EAEjBlB,cACI,MA5FuB,CAACkB,IAC5B,MAAM,YAACG,EAAW,QAAEC,EAAO,MAAEC,EAAK,cAAEC,GAAiBN,EAE/CS,EAAYL,aAAmBM,MAAQN,EAAUM,KAAKC,MAEtDC,IAAkBR,EAClBvC,EAAO+C,EAAgB,GAAGR,EAAQS,aAAajB,EAAYQ,EAAQU,cAAgB,GACnFC,EAAOH,EAAgBhD,EAAWwC,GAAW,GAG7CkB,EADkBN,OAAOC,OAAOX,GAAeY,MAAMC,KAASA,IAC9B,eAAiB,GACjDI,EAAgBd,EAAY,iBAAmB,GAE/Ce,GAlC0BC,EAkCepB,EAARP,EAjCzB4B,KAAI,CAACrB,EAAOsB,IAEf,2DAGStB,KAASsB,+DACyBtB,oEAErCA,mBAPKoB,IAAiBpB,EAQjB,UAAY,8DAGbA,KAASsB,mDACYtB,oBAC/BA,0BAGRuB,KAAK,OAlBe,IAASH,EAmChC,MAAMI,EArDqB,EAACC,EAAMxB,IAC3BwB,EAAKJ,KAAI,CAACK,EAAKJ,IAEX,uIAIcI,KAAOJ,kFALVrB,EAAcyB,GAQV,UAAY,mFAEkBA,KAAOJ,wBAChDI,8BAGZH,KAAK,MAqCWI,CAAuBnC,EAAMS,GAEhD,MAAO,yCACsCD,KAASiB,KAAeC,8lBAelDpB,kWAQyCS,EAAgB,MAAQ,uEAEhEA,EAAgB,yXAQH/C,KAAQkD,gIAInB,+WAQIc,+TASNL,uXAqBTS,CAAuBvD,KAAKwB,QC7H5B,MAAMgC,UAAgB3D,EACjCO,cACI,MARA,+GCJR,MCCMqD,EAAsB,CAAC,iBAAkB,kBAAmB,+BAC5DC,EAAuB,CACzB,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,GAEJC,EAAsBC,GAGjBA,EAFaC,EAAuB,EAAGD,EAAME,SAKlDD,EAAyB,CAACE,EAAKC,IAC1BD,EAAME,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,ICA7CK,EAAW1D,SAAS2D,cAAc,QAClCC,EAAWF,EAASC,cAAc,kBAElCE,EAAa,CAACC,EAAiBlD,KACjC,MAGMmD,EAAoBC,IACtBA,EAAEC,iBACFH,EAAgBI,aAAaC,EAAaC,IAExCC,EAAmBL,KACM,WAAVA,EAAEM,KAA8B,QAAVN,EAAEM,MAErCP,EAAiBC,GAErBhE,SAASuE,oBAAoB,UAAWF,IAGtCF,EAAc,IAAIxD,EAAcC,GAAMf,aAC5BsE,EAAYR,cAAc,oBAClCa,iBAAiB,SAAS,KAhB9BV,EAAgBI,aAAaE,EAAiBD,GAkB9CnE,SAASwE,iBAAiB,UAAWH,MAGzC,MAAMD,EAAkB,IAAInC,EAAkBrB,GAAMf,aAC9BuE,EAAgBT,cAAc,eACtCa,iBAAiB,SAAUR,IACrCA,EAAEC,iBACFF,EAAiBC,GACjBhE,SAASuE,oBAAoB,UAAWF,MAE5CxF,EAAOiF,EAAiBK,EAAavF,IA6BnC6F,EDjCK,IAAIC,MCjCI,IDiCSC,KAAK,IAAIrC,KAZhB,KACjB,MAAMtB,EAAUuC,KAAKE,SAAW,GAAM,KAfpB,MAClB,MAAMmB,EAAa,IAAItD,KAEjBuD,GADOtB,KAAKE,SAAW,GAAM,GAAK,GACfN,EAAuB,EAAG,GAInD,OAFAyB,EAAWE,QAAQF,EAAWnD,UAAYoD,GAEnCD,GAQsCG,GAC7C,MAAO,CACHhE,YAAakC,EAAmBF,GAChC/B,QAAAA,EACAE,cAAeF,EAAUgC,EATtBpB,OAAOoD,OAAO,GAAIhC,EAAsB,CAC3C,GAAMO,KAAKE,SAAW,KAStBxC,MAAOgC,EAAmBvC,GAC1BS,WAAW,EACXC,YAAY,MCsCd6D,EFjFc,CAAC,MAAO,QAAS,YAAa,YAAa,WAExC3C,KAAI,CAAC4C,EAAMC,KACnB,CACH1F,KAAMyF,EACNE,MAAO7B,KAAKC,MAAsB,GAAhBD,KAAKE,UACvB4B,SAAgB,IAANF,ME6EtBtG,EAAO+E,GAAU,IChDF,cAAmBzE,EAC9BO,cACI,MAjCA,85BD+E6BG,aAAcjB,GACnDC,EAAO6E,EAAU,IE1DF,cAAqBvE,EAChCC,YAAY6F,GACRpE,QACAvB,KAAKgG,SAAWL,IFuDaA,GAASpF,aAAcjB,GAC5D,MAAM2G,EAAiB,IG7ER,cAAoBpG,EAC/BO,cACI,MANA,gDHkFRb,EAAO6E,EAAU6B,EAAe1F,aAAcjB,GAjC1B,EAAC4G,EAAWf,KAC5B,MAAMgB,EAAehB,EAAMiB,OAAO9E,GAASA,EAAKO,YAEhD,GADAxB,QAAQC,IAAI6F,GACRA,EAEA,YADA5G,EAAO2G,EAAU3F,cAAc,IAAIiD,GAAoBjD,aAAcjB,GAGzE,MAAM+G,GAAY,IAAItF,GAAiBR,aACvChB,EAAO2G,EAAU3F,aAAc8F,EAAW/G,GAC1CC,EAAO2G,EAAU3F,cAAc,IAAIS,GAAgBT,aAAcjB,GAEjE,IAAIgH,EAjD6B,EAkDjCnB,EAAMoB,MAAM,EAAGD,GAAkBE,SAASlF,GAASiD,EAAW8B,EAAW/E,KAEzE,MAAMmF,GAAc,IAAIxF,GAAmBV,aAC3ChB,EAAO2G,EAAU3F,aAAckG,EAAanH,GAE5CmH,EAAYvB,iBAAiB,SAAS,KAClC,MAAMwB,EAAgBJ,EACtBA,GAxD8B,EAyD9BnB,EAAMoB,MAAMG,EAAeJ,GAAkBE,SAASlF,GAASiD,EAAW8B,EAAW/E,KACjFgF,GA5DO,IA6DPG,EAAYE,aAYxBC,CAAYX,EAAgBd,I","sources":["webpack://TaskManager/./src/utils/common.js","webpack://TaskManager/./src/components/abstract-component.js","webpack://TaskManager/./src/components/tasks.js","webpack://TaskManager/./src/components/sort.js","webpack://TaskManager/./src/components/more-btn.js","webpack://TaskManager/./src/const.js","webpack://TaskManager/./src/components/task.js","webpack://TaskManager/./src/components/task-edit.js","webpack://TaskManager/./src/components/no-tasks.js","webpack://TaskManager/./src/mock/filter.js","webpack://TaskManager/./src/mock/task.js","webpack://TaskManager/./src/main.js","webpack://TaskManager/./src/components/menu.js","webpack://TaskManager/./src/components/filter.js","webpack://TaskManager/./src/components/board.js"],"sourcesContent":["const castTimeFormat = (value) => {\n    return value < 10 ? `0${value}` : String(value);\n};\n\nexport const createElement = (template) => {\n    const newElement = document.createElement(`div`);\n    newElement.innerHTML = template;\n\n    return newElement.firstChild;\n};\n\nexport const formatTime = (date) => {\n    const hours = castTimeFormat(date.getHours() % 12);\n    const minutes = castTimeFormat(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n};\n\nexport const RenderPosition = {\n    AFTERBEGIN: `afterbegin`,\n    BEFOREEND: `beforeend`\n};\n\nexport const render = (container, element, place) =>{\n    switch (place) {\n        case RenderPosition.AFTERBEGIN:\n            container.prepend(element);\n            break;\n        case RenderPosition.BEFOREEND:\n            container.append(element);\n            break;\n    }\n};","import {createElement} from \"../utils/common\";\n\nexport default class AbstractComponent {\n    constructor() {\n        if(new.target === AbstractComponent) {\n            throw new Error('Нельзя создать экземпляр класса, только наследовать');\n        }\n        this._element = null;\n        this._nameClass = new.target.name;\n    }\n\n    getTemplate() {\n        console.log(this._nameClass);\n        throw new Error(`Реализуй асбтрактный метод в ${this._nameClass}`);\n    }\n\n    getElement() {\n        if (!this._element) {\n            this._element = createElement(this.getTemplate());\n        }\n\n        return this._element;\n    }\n\n    removeElement() {\n        this._element = null;\n    }\n}\n","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createTasksTemplate = () => {\n    return (\n        `<div class=\"board__tasks\"></div>`\n    );\n};\n\nexport default class Tasks extends AbstractComponent{\n    getTemplate() {\n        return createTasksTemplate();\n    }\n}\n","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createSortTemplate = () => {\n    return (\n        `<div class=\"board__filter-list\">\n          <a href=\"#\" class=\"board__filter\" data-sort-type=\"default\">SORT BY DEFAULT</a>\n          <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-up\">SORT BY DATE up</a>\n          <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-down\">SORT BY DATE down</a>\n        </div>`\n    );\n};\n\nexport default class Sort extends AbstractComponent{\n    getTemplate() {\n        return createSortTemplate();\n    }\n}","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createMoreBtnTemplate = () => {\n    return (\n        `<button class=\"load-more\" type=\"button\">load more</button>`\n    );\n};\n\nexport default class MoreBtn extends AbstractComponent{\n    getTemplate() {\n        return createMoreBtnTemplate();\n    }\n};\n","export const MONTH_NAMES = [\n    `January`,\n    `February`,\n    `March`,\n    `April`,\n    `May`,\n    `June`,\n    `July`,\n    `August`,\n    `September`,\n    `October`,\n    `November`,\n    `December`,\n];\nexport const DAYS = ['mo', 'tu', 'we', 'th', 'fr', 'sa', 'su'];\n\nexport const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];","import {MONTH_NAMES, DAYS, COLORS} from \"../const.js\";\nimport {formatTime} from \"../utils/common.js\";\nimport AbstractComponent from \"../components/abstract-component.js\";\n\nconst createTaskTemplate = (task) => {\n    const {description, dueDate, color, repeatingDays, isArchive, isFavorite} = task;\n\n    const isExpired = dueDate instanceof Date && dueDate < Date.now();\n\n    const isDateShowing = !!dueDate;\n    const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n    const time = isDateShowing ? formatTime(dueDate) : ``;\n\n    const isRepeatingDays = Object.values(repeatingDays).some((it) => !!it);\n    const repeatClass = isRepeatingDays ? `card--repeat` : ``;\n    const deadlineClass = isExpired ? `card--deadline` : ``;\n    const archiveButtonInactiveClass = isArchive ? `` : `card__btn--disabled `;\n    const favoriteButtonInactiveClass = isFavorite ? `` : `card__btn--disabled `;\n\n    return (\n        `<article class=\"card card--${color} ${repeatClass} ${deadlineClass}\">\n        <div class=\"card__form\">\n            <div class=\"card__inner\">\n                <div class=\"card__control\">\n                    <button type=\"button\" class=\"card__btn card__btn--edit\">edit</button>\n                    <button type=\"button\" class=\"card__btn card__btn--archive ${archiveButtonInactiveClass}\">archive</button>\n                    <button type=\"button\" class=\"card__btn card__btn--favorites ${favoriteButtonInactiveClass}\">favorites</button>\n                </div>\n    \n                <div class=\"card__color-bar\">\n                    <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                        <use xlink:href=\"#wave\"></use>\n                    </svg>\n                </div>\n    \n                <div class=\"card__textarea-wrap\">\n                    <p class=\"card__text\">${description}</p>\n                </div>\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <div class=\"card__date-deadline\">\n                        <p class=\"card__input-deadline-wrap\">\n                          <span class=\"card__date\">${date}</span>\n                          <span class=\"card__time\">${time}</span>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </article>`\n    );\n};\n\nexport default class Task extends AbstractComponent{\n    constructor(task) {\n        super();\n        this._task = task;\n    }\n    getTemplate() {\n        return createTaskTemplate(this._task);\n    }\n}\n","import {MONTH_NAMES, DAYS, COLORS} from \"../const.js\";\nimport {formatTime} from \"../utils/common.js\";\nimport AbstractComponent from \"../components/abstract-component.js\";\n\nconst taskRepeatDaysTemplate = (days, repeatingDays) => {\n    return days.map((day, index) => {\n        const isChecked = repeatingDays[day];\n        return (\n            `<input\n                class=\"visually-hidden card__repeat-day-input\"\n                type=\"checkbox\"\n                id=\"repeat-${day}-${index}\"\n                name=\"repeat\"\n                value=\"mo\"\n                ${isChecked ? `checked` : ``}\n              />\n              <label class=\"card__repeat-day\" for=\"repeat-${day}-${index}\"\n                >${day}</label\n              >`\n        );\n    }).join(`\\n`);\n};\nconst taskColorsTemplate = (colors, currentColor) => {\n    return colors.map((color, index) => {\n        const isChecked = currentColor === color;\n        return (\n            `<input\n            type=\"radio\"\n            id=\"color-${color}-${index}\"\n            class=\"card__color-input card__color-input--${color} visually-hidden\"\n            name=\"color\"\n            value=\"${color}\"\n            ${isChecked ? `checked` : ``}\n          />\n          <label\n            for=\"color-${color}-${index}\"\n            class=\"card__color card__color--${color}\"\n            >${color}</label\n          >`\n        );\n    }).join(`\\n`);\n};\n\nconst createTaskEditTemplate = (task) => {\n    const {description, dueDate, color, repeatingDays} = task;\n\n    const isExpired = dueDate instanceof Date && dueDate < Date.now();\n\n    const isDateShowing = !!dueDate;\n    const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n    const time = isDateShowing ? formatTime(dueDate) : ``;\n\n    const isRepeatingDays = Object.values(repeatingDays).some((it) => !!it);\n    const repeatClass = isRepeatingDays ? `card--repeat` : ``;\n    const deadlineClass = isExpired ? `card--deadline` : ``;\n\n    const colorMarkup = taskColorsTemplate(COLORS, color);\n    const daysMarkup = taskRepeatDaysTemplate(DAYS, repeatingDays);\n\n    return (\n        `<article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\">\n            <form class=\"card__form\" method=\"get\">\n              <div class=\"card__inner\">\n                <div class=\"card__color-bar\">\n                  <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                    <use xlink:href=\"#wave\"></use>\n                  </svg>\n                </div>\n\n                <div class=\"card__textarea-wrap\">\n                  <label>\n                    <textarea\n                      class=\"card__text\"\n                      placeholder=\"Start typing your text here...\"\n                      name=\"text\"\n                    >${description}</textarea>\n                  </label>\n                </div>\n\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <button class=\"card__date-deadline-toggle\" type=\"button\">\n                        date: <span class=\"card__date-status\">${isDateShowing ? `yes` : `no`}</span>\n                      </button>\n                      ${isDateShowing ? `\n                      <fieldset class=\"card__date-deadline\">\n                        <label class=\"card__input-deadline-wrap\">\n                          <input\n                            class=\"card__date\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"date\"\n                            value=\"${date} ${time}\"\n                          />\n                        </label>\n                      </fieldset>\n                      ` : ``}                     \n\n                      <button class=\"card__repeat-toggle\" type=\"button\">\n                        repeat:<span class=\"card__repeat-status\">yes</span>\n                      </button>\n\n                      <fieldset class=\"card__repeat-days\">\n                        <div class=\"card__repeat-days-inner\">\n                            ${daysMarkup}\n                        </div>\n                      </fieldset>\n                    </div>\n                  </div>\n\n                  <div class=\"card__colors-inner\">\n                    <h3 class=\"card__colors-title\">Color</h3>\n                    <div class=\"card__colors-wrap\">\n                      ${colorMarkup}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"card__status-btns\">\n                  <button class=\"card__save\" type=\"submit\">save</button>\n                  <button class=\"card__delete\" type=\"button\">delete</button>\n                </div>\n              </div>\n            </form>\n          </article>`\n    );\n};\n\nexport default class TaskEdit extends AbstractComponent{\n    constructor(task) {\n        super();\n        this._task = task;\n    }\n    getTemplate() {\n        return createTaskEditTemplate(this._task);\n    }\n}","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createBoardTemplate = () => {\n    return (\n        `<p class=\"board__no-tasks\">\n          Click «ADD NEW TASK» in menu to create your first task\n        </p>`\n    );\n};\n\nexport default class NoTasks extends AbstractComponent{\n    getTemplate() {\n        return createBoardTemplate();\n    }\n}\n","const filterNames = ['all', 'today', 'favorites', 'repeating', 'archive'];\nconst generateFilter = () => {\n    return filterNames.map((item, i) => {\n        return {\n            name: item,\n            count: Math.floor(Math.random() * 10),\n            disabled: i === 3\n        }\n    })\n};\nexport {generateFilter}","import {COLORS} from \"../const.js\";\nconst descriptionVariable = [`Изучить теорию`, `Сделать домашку`, ` Пройти интенсив на соточку`];\nconst DefaultRepeatingDays = {\n    \"mo\": false,\n    \"tu\": false,\n    \"we\": false,\n    \"th\": false,\n    \"fr\": false,\n    \"sa\": false,\n    \"su\": false,\n};\nconst getRandomArrayItem = (array) => {\n    const randomIndex = getRandomIntegerNumber(0, array.length);\n\n    return array[randomIndex];\n};\n\nconst getRandomIntegerNumber = (min, max) => {\n    return min + Math.floor(Math.random() * (max - min));\n};\n\nconst getRandomDate = () => {\n    const targetDate = new Date();\n    const sign = Math.random() > 0.5 ? 1 : -1;\n    const diffValue = sign * getRandomIntegerNumber(0, 8);\n\n    targetDate.setDate(targetDate.getDate() + diffValue);\n\n    return targetDate;\n};\nconst generateRepeatingDays = () => {\n    return Object.assign({}, DefaultRepeatingDays, {\n        \"mo\": Math.random() > 0.5,\n    });\n};\nconst generateTask = () => {\n    const dueDate = Math.random() > 0.5 ? null : getRandomDate();\n    return {\n        description: getRandomArrayItem(descriptionVariable),\n        dueDate,\n        repeatingDays: dueDate ? DefaultRepeatingDays : generateRepeatingDays(),\n        color: getRandomArrayItem(COLORS),\n        isArchive: false,\n        isFavorite: false,\n    };\n};\nconst generateTasks = (count) => {\n    return new Array(count).fill(``).map(generateTask);\n};\nexport {generateTask, generateTasks}","import BordComponent from \"./components/board.js\";\nimport MenuComponent from \"./components/menu.js\";\nimport FilterComponent from \"./components/filter.js\";\nimport TasksComponent from \"./components/tasks.js\";\nimport SortComponent from \"./components/sort.js\";\nimport MoreBtnComponent from \"./components/more-btn.js\";\nimport TaskComponent from \"./components/task.js\";\nimport TaskEditComponent from \"./components/task-edit.js\";\nimport NoTaskstComponent from \"./components/no-tasks.js\";\n\nimport {generateFilter} from \"./mock/filter.js\";\nimport {generateTasks} from \"./mock/task.js\";\nimport {render, RenderPosition} from \"./utils/common.js\";\n\nconst TASK_COUNT = 23;\nconst SHOWING_TASKS_COUNT_ON_START = 8;\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 8;\n\nconst siteMain = document.querySelector(`main`);\nconst siteMenu = siteMain.querySelector(`.main__control`);\n\nconst renderTask = (taskListElement, task) => {\n    const onEditBtnClick = () => {\n        taskListElement.replaceChild(taskEditElement, taskElement);\n    };\n    const onEditFormSubmit = (e) => {\n        e.preventDefault();\n        taskListElement.replaceChild(taskElement, taskEditElement);\n    };\n    const onEscapeKeyDown = (e) => {\n        const isEscKey = e.key === `Escape` || e.key === `Esc`;\n        if (isEscKey) {\n            onEditFormSubmit(e);\n        }\n        document.removeEventListener(`keydown`, onEscapeKeyDown);\n    };\n\n    const taskElement = new TaskComponent(task).getElement();\n    const editBtn = taskElement.querySelector(`.card__btn--edit`);\n    editBtn.addEventListener(`click`, () => {\n        onEditBtnClick();\n        document.addEventListener(`keydown`, onEscapeKeyDown);\n    });\n\n    const taskEditElement = new TaskEditComponent(task).getElement();\n    const formSubmitBtn = taskEditElement.querySelector(`.card__save`);\n    formSubmitBtn.addEventListener(`click`, (e) => {\n        e.preventDefault();\n        onEditFormSubmit(e);\n        document.removeEventListener(`keydown`, onEscapeKeyDown);\n    });\n    render(taskListElement, taskElement, RenderPosition.BEFOREEND);\n};\nconst renderBoard = (siteBoard, tasks) => {\n    const isAllArchive = tasks.every((task) => task.isArchive);\n    console.log(isAllArchive);\n    if (isAllArchive) {\n        render(siteBoard.getElement(), new NoTaskstComponent().getElement(), RenderPosition.AFTERBEGIN);\n        return;\n    }\n    const tasksList = new TasksComponent().getElement();\n    render(siteBoard.getElement(), tasksList, RenderPosition.AFTERBEGIN);\n    render(siteBoard.getElement(), new SortComponent().getElement(), RenderPosition.AFTERBEGIN);\n\n    let showingTaskCount = SHOWING_TASKS_COUNT_ON_START;\n    tasks.slice(1, showingTaskCount).forEach((task) => renderTask(tasksList, task));\n\n    const loadMoreBtn = new MoreBtnComponent().getElement();\n    render(siteBoard.getElement(), loadMoreBtn, RenderPosition.BEFOREEND);\n\n    loadMoreBtn.addEventListener(`click`, () => {\n        const prevTaskCount = showingTaskCount;\n        showingTaskCount += SHOWING_TASKS_COUNT_BY_BUTTON;\n        tasks.slice(prevTaskCount, showingTaskCount).forEach((task) => renderTask(tasksList, task));\n        if (showingTaskCount >= TASK_COUNT) {\n            loadMoreBtn.remove();\n        }\n    });\n};\n\nconst tasks = generateTasks(TASK_COUNT);\nconst filters = generateFilter();\n\nrender(siteMenu, new MenuComponent().getElement(), RenderPosition.BEFOREEND);\nrender(siteMain, new FilterComponent(filters).getElement(), RenderPosition.BEFOREEND);\nconst boardComponent = new BordComponent();\nrender(siteMain, boardComponent.getElement(), RenderPosition.BEFOREEND);\nrenderBoard(boardComponent, tasks);\n","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createMenuTemplate = () => {\n    return (\n        `<section class=\"control__btn-wrap\">\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__new-task\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n            >+ ADD NEW TASK</label\n          >\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__task\"\n            class=\"control__input visually-hidden\"\n            checked\n          />\n          <label for=\"control__task\" class=\"control__label\">TASKS</label>\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__statistic\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__statistic\" class=\"control__label\"\n            >STATISTICS</label\n          >\n        </section>`\n    );\n};\n\nexport default class Menu extends AbstractComponent{\n    getTemplate() {\n        return createMenuTemplate();\n    }\n}\n","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst filterItemTemplate = (filter, isChecked) => {\n    const {name, count, disabled} = filter;\n    return (\n        `<input\n          type=\"radio\"\n          id=\"filter__${name}\"\n          class=\"filter__input visually-hidden\"\n          name=\"filter\"\n          ${isChecked ? `checked` : ``}\n          ${disabled ? `disabled` : ``}\n        />\n        <label for=\"filter__${name}\" class=\"filter__label\">${name} <span class=\"filter__${name}-count\">${count}</span></label>`\n    );\n};\n\nconst createFilterTemplate = (filters) => {\n    const filterMarkup = filters.map((item, i) => filterItemTemplate(item, i === 0)).join(`\\n`);\n    return (\n        `<section class=\"main__filter filter container\">\n            ${filterMarkup}\n        </section>`\n    );\n};\n\nexport default class Filter extends AbstractComponent{\n    constructor(filters) {\n        super();\n        this._filters = filters;\n    }\n\n}\n","import AbstractComponent from \"../components/abstract-component.js\";\n\nconst createBoardTemplate = () => {\n    return (\n        `<section class=\"board container\"></section>`\n    );\n};\n\nexport default class Board extends AbstractComponent{\n    getTemplate() {\n        return createBoardTemplate();\n    }\n}\n"],"names":["castTimeFormat","value","String","formatTime","date","getHours","getMinutes","RenderPosition","render","container","element","place","prepend","append","AbstractComponent","constructor","Error","this","_element","_nameClass","name","getTemplate","console","log","getElement","template","newElement","document","createElement","innerHTML","firstChild","removeElement","Tasks","Sort","MoreBtn","MONTH_NAMES","DAYS","COLORS","Task","task","super","_task","description","dueDate","color","repeatingDays","isArchive","isFavorite","isExpired","Date","now","isDateShowing","getDate","getMonth","time","Object","values","some","it","createTaskTemplate","TaskEdit","repeatClass","deadlineClass","colorMarkup","currentColor","map","index","join","daysMarkup","days","day","taskRepeatDaysTemplate","createTaskEditTemplate","NoTasks","descriptionVariable","DefaultRepeatingDays","getRandomArrayItem","array","getRandomIntegerNumber","length","min","max","Math","floor","random","siteMain","querySelector","siteMenu","renderTask","taskListElement","onEditFormSubmit","e","preventDefault","replaceChild","taskElement","taskEditElement","onEscapeKeyDown","key","removeEventListener","addEventListener","tasks","Array","fill","targetDate","diffValue","setDate","getRandomDate","assign","filters","item","i","count","disabled","_filters","boardComponent","siteBoard","isAllArchive","every","tasksList","showingTaskCount","slice","forEach","loadMoreBtn","prevTaskCount","remove","renderBoard"],"sourceRoot":""}